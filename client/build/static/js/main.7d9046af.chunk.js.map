{"version":3,"sources":["components/Header.js","pages/SelectPage.js","pages/CreatePage.js","pages/ContestPage.js","App.js","router.js","index.js"],"names":["Header","className","id","to","exact","activeClassName","SelectPage","useState","contests","setContests","loadContests","a","axios","get","res","status","data","useEffect","length","map","item","idx","_id","name","project","CreatePage","history","useHistory","prize","inputs","setInputs","prizes","setPrizes","handlerInput","e","target","value","submit","preventDefault","post","toast","error","push","onSubmit","autoComplete","TextField","label","onChange","placeholder","Button","variant","color","onClick","filter","_","type","ContestPage","useParams","info","setInfo","input","setInput","selectors","setSelectors","number","setNumber","text","btnAdd","setBtnAdd","getData","handleChange","prizeId","temp","infos","unshift","delInfo","delete","ElStatus","InputLabel","Select","labelId","MenuItem","test","parsePhoneNumber","saveBtnAdd","InputProps","startAdornment","code","country","height","fallback","disabled","i","CircularProgress","App","router","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d9046af.chunk.js","sourcesContent":["import {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand navbar-light bg-light\">\r\n            <div className=\"container\">\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <NavLink className='nav-link' to='/' exact activeClassName='active'>\r\n                            Главная\r\n                        </NavLink>\r\n                        <NavLink className='nav-link' to='/create' activeClassName='active'>\r\n                            Создать\r\n                        </NavLink>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header","import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst SelectPage = () => {\r\n    const [contests, setContests] = useState([])\r\n\r\n    const loadContests = async () => {\r\n        const res = await axios.get('/api/contest/')\r\n        if (res.status !== 200) return\r\n        setContests(res.data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadContests()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='container-xl'>\r\n            <div className='row'>\r\n                {\r\n                    !contests.length ? 'Еще нет конкурсов' :\r\n                        contests.map((item, idx) => {\r\n                            return (\r\n                                <NavLink to={'/contest/'+item._id} className='col-xl-3 col-md-10 border m-xl-3 p-3 text-decoration-none' key={idx}>\r\n                                    <div className='text-uppercase fs-4 pointer'>{item.name}</div>\r\n                                    <br/>\r\n                                    <div className='fs-6'>{item.project}</div>\r\n                                </NavLink>\r\n                            )\r\n                        })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectPage","import Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport axios from \"axios\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {toast} from \"react-toastify\";\r\n\r\n\r\nconst CreatePage = () => {\r\n    const history = useHistory()\r\n    const [inputs, setInputs] = useState({\r\n        name: '', project: '', prize: '',\r\n    })\r\n    const [prizes, setPrizes] = useState([])\r\n\r\n    const handlerInput = (e) => {\r\n        setInputs({...inputs, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const addPrize = () => {\r\n        if (!inputs.prize) return\r\n        setPrizes([inputs.prize, ...prizes])\r\n        setInputs({...inputs, prize: ''})\r\n    }\r\n    const delPrize = (id) => {\r\n        setPrizes(prizes.filter((_, idx) => idx !== id))\r\n    }\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault()\r\n        const {name, project} = inputs\r\n        if (!name || !project || !prizes.length) return\r\n        const res = await axios.post('/api/contest/', {name, project, prizes})\r\n        if (res.status !== 200) {\r\n            toast.error(res.data)\r\n        } else {\r\n            toast('Конкурс создан')\r\n            history.push('/contest/' + res.data._id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submit} className='container-xl' autoComplete=\"off\">\r\n            <div className='row mb-2'>\r\n                <TextField label='Название' name='name' value={inputs.name} onChange={handlerInput}/>\r\n                <TextField label=\"Проект\" name='project' value={inputs.project} onChange={handlerInput}/>\r\n                <TextField label=\"Приз\" name='prize' value={inputs.prize} onChange={handlerInput}\r\n                           placeholder='Например: 1000 долей'/>\r\n                <Button className='mt-3 mb-4' variant=\"contained\" color=\"primary\" onClick={addPrize}>Добавить приз</Button>\r\n\r\n                {prizes.map((item, idx) => (\r\n                    <div className='row-md-12 mb-2 border-bottom w-100' key={idx}>\r\n                        <div className='col-xl-10 col-md-12 w-100'>{item}</div>\r\n                        <Button className='col-xl-2 col-md-12 w-100' color='secondary'\r\n                                onClick={() => delPrize(idx)}>Удалить</Button>\r\n                    </div>\r\n                ))}\r\n\r\n            </div>\r\n            <div className='row mt-5'>\r\n                <Button variant=\"contained\" color=\"primary\" type='submit'>Создать конкурс</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreatePage","import {useParams} from 'react-router-dom'\r\nimport React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {CircularProgress} from '@material-ui/core';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport parsePhoneNumber from 'libphonenumber-js'\r\nimport Flag from 'react-world-flags'\r\nimport {toast} from \"react-toastify\";\r\n\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\n\r\n\r\nconst ContestPage = () => {\r\n    const {id} = useParams()\r\n    const [info, setInfo] = useState(null)\r\n    const [input, setInput] = useState('')\r\n    const [selectors, setSelectors] = useState({\r\n        prize: '', type: '',\r\n    })\r\n    const [number, setNumber] = useState(null)\r\n    const [btnAdd, setBtnAdd] = useState({\r\n        text: 'Добавить участника', color: \"primary\"\r\n    })\r\n\r\n    const getData = async (id) => {\r\n        const res = await axios.get('/api/contest/' + id)\r\n        if (res.status !== 200) {\r\n            toast.error(res.data)\r\n        } else {\r\n            setInfo(res.data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData(id)\r\n    }, [id])\r\n\r\n    const handlerInput = (e) => {\r\n        let {value} = e.target\r\n        if (selectors.type === 'phone') {\r\n            if (!(/^[\\d,+]*$/).test(value)) return\r\n            const number = parsePhoneNumber(value)\r\n            let saveBtnAdd = {\r\n                text: 'Добавить участника',\r\n                color: 'primary'\r\n            }\r\n            if (!number) {\r\n                saveBtnAdd = {\r\n                    text: 'Введите корректный номер',\r\n                    color: 'secondary'\r\n                }\r\n            }\r\n            setBtnAdd(saveBtnAdd)\r\n            setNumber(number)\r\n        }\r\n        setInput(value)\r\n    }\r\n    const handleChange = e => {\r\n        setSelectors({...selectors, [e.target.name]: e.target.value})\r\n        switch (e.target.name) {\r\n            case 'prize':\r\n                break;\r\n            case 'type':\r\n                let saveBtnAdd = {\r\n                    text: 'Добавить участника',\r\n                    color: 'primary'\r\n                }\r\n                setBtnAdd(saveBtnAdd)\r\n        }\r\n    }\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault()\r\n        if (!input || !selectors.type || !selectors.prize) return\r\n        const res = await axios.post('/api/contest/' + info._id, {\r\n            data: input,\r\n            type: selectors.type,\r\n            prizeId: selectors.prize\r\n        })\r\n        if (res.status !== 200) {\r\n            toast.error(res.data)\r\n        } else {\r\n            const temp = info\r\n            temp.infos.unshift(res.data)\r\n            setInfo({...temp})\r\n            toast('Запись добавлена')\r\n        }\r\n    }\r\n\r\n    const delInfo = async (id) => {\r\n        const res = await axios.delete('/api/contest/' + info._id +'/'+id)\r\n        if (res.status !== 200){\r\n            toast.error(res.data)\r\n        } else {\r\n            const temp = info\r\n            temp.infos = temp.infos.filter((item)=>item._id !== id)\r\n            setInfo({...temp})\r\n            toast('Запись удалена')\r\n        }\r\n    }\r\n\r\n    let ElStatus = ({status})=>{\r\n        switch (status) {\r\n            case 'await':\r\n                return <CachedIcon className='awaitFound'/>\r\n            case 'done':\r\n                return <DoneIcon className='doneFound'/>\r\n            case 'not':\r\n                return <CloseIcon className='notFound'/>\r\n        }\r\n\r\n    }\r\n\r\n\r\n    if (!info) return <div className='container text-center'><CircularProgress/></div>\r\n    return (\r\n        <div className='container-xl'>\r\n            <div className='mb-2 mt-2 text-center bg-light p-3 text-dark fw-bold'>\r\n                {info.project} | {info.name} | {info._id}\r\n            </div>\r\n            <div>\r\n                <form onSubmit={submit}>\r\n                    <div className='row mb-2 mt-4'>\r\n                        <div className='col-12 mb-4'>\r\n                            <InputLabel id=\"toPrize\">Приз</InputLabel>\r\n                            <Select\r\n                                labelId='toPrize'\r\n                                className='w-100'\r\n                                name='prize'\r\n                                value={selectors.prize}\r\n                                onChange={handleChange}\r\n                            >\r\n                                {info.prizes.map((item, id) => {\r\n                                    return <MenuItem value={item._id}>{item.data}</MenuItem>\r\n                                })}\r\n                            </Select>\r\n                        </div>\r\n                        <div className='col-xl-2 col-md-12 mb-4'>\r\n                            <InputLabel id=\"toInfo\">Тип информации</InputLabel>\r\n                            <Select\r\n                                labelId='toInfo'\r\n                                className='w-100'\r\n                                name='type'\r\n                                value={selectors.type}\r\n                                onChange={handleChange}\r\n                            >\r\n                                <MenuItem value='login'>Логин</MenuItem>\r\n                                <MenuItem value='phone'>Телефона</MenuItem>\r\n                                <MenuItem value='any'>Другое</MenuItem>\r\n                            </Select>\r\n                        </div>\r\n                        <TextField className='col-xl-10 col-md-12 w-md-100' value={input} onChange={handlerInput}\r\n                                   label='Добавить' name='name' placeholder='Добавить участника'\r\n                                   InputProps={{\r\n                                       startAdornment: ((selectors.type === 'phone') && number) &&\r\n                                           <Flag code={number.country} height={20} fallback={<span>?!</span>}/>,\r\n                                   }}\r\n                        />\r\n                    </div>\r\n                    <Button className='row-12 mb-5 w-100' variant=\"contained\"\r\n                            color={btnAdd.color} type='submit'\r\n                            disabled={!selectors.type || !selectors.prize || ((selectors.type === 'phone') && !number)}\r\n                    >\r\n                        {btnAdd.text}\r\n                    </Button>\r\n                </form>\r\n                {   (!selectors.type || !selectors.prize) &&\r\n                    <div className='row mx-auto mb-5 text-danger'>Выберите тип информации и приз</div>\r\n                }\r\n                <div className='row'>\r\n                    <div className='col-12 mt-3'>\r\n                        <div className='row'>\r\n                            {info.infos.map((item, idx) => {\r\n                                const status = item.status || 'await'\r\n                                // if (item.prizeId !== selectors.prize) return <></>\r\n                                return (\r\n                                    <div className={`col-12 mb-3 border-bottom ${status}`} key={idx}>\r\n                                        <div className='row'>\r\n                                            <div className='col-xl-10 col-md-12'><ElStatus status={status} /> {item.type}: {item.data} | prize: {(info.prizes.\r\n                                            filter((i)=>i._id === item.prizeId))[0].data}</div>\r\n                                            <Button className='col-xl-2 col-md-12' color='secondary'\r\n                                                    onClick={() => delInfo(item._id)}>Удалить</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContestPage","import './App.css';\nimport Header from \"./components/Header\";\nimport {useRotes} from \"./router\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {ToastContainer, toast, useToast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n\n    const router = useRotes()\n\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Header/>\n                {router}\n            </div>\n            <ToastContainer/>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import {Switch, Route, Redirect } from 'react-router-dom'\r\nimport SelectPage from \"./pages/SelectPage\";\r\nimport CreatePage from \"./pages/CreatePage\";\r\nimport ContestPage from \"./pages/ContestPage\";\r\n\r\n\r\nexport const useRotes = ()=>{\r\n\r\n    return(\r\n        <Switch>\r\n            <Route path='/' exact>\r\n                <SelectPage/>\r\n            </Route>\r\n            <Route path='/create'>\r\n                <CreatePage/>\r\n            </Route>\r\n            <Route path='/contest/:id'>\r\n                <ContestPage/>\r\n            </Route>\r\n\r\n            <Redirect to='/'/>\r\n        </Switch>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}