{"version":3,"sources":["components/PhotoEditor.js","components/AddCommittee.js","pages/Committee.js","components/Header.js","pages/SelectContest.js","pages/CreateContest.js","pages/Contest.js","App.js","router.js","index.js","components/assets/styles/PhotoEditor.module.css"],"names":["PhotoEditor","isCustomResize","onLoad","useState","image","setImage","isSquare","allowZoomOut","position","x","y","scale","rotate","borderRadius","preview","width","height","disableCanvasRotation","isTransparent","backgroundColor","state","setState","editorRef","useRef","setEditorRef","editor","handleNewImage","e","handlerCompress","target","files","a","maxSizeMB","maxWidthOrHeight","useWebWorker","maxIteration","fileType","error","console","log","handlePositionChange","prev","handleSave","getImageScaledToCanvas","toDataURL","send","size","axios","post","res","status","toast","data","w","h","className","cn","s","wrapper","onDrop","dropped","noClick","noKeyboard","maxFiles","getRootProps","getInputProps","name","type","onChange","style","display","ref","onPositionChange","parseFloat","canvas","value","min","max","step","defaultValue","resize","Switch","checked","inputProps","inputTwo","parseInt","update","Button","variant","color","onClick","src","img","Math","PhotoEditorButton","props","isOpen","setIsOpen","handlerModal","Modal","open","onClose","AddCommittee","setCommittee","country","typeLink","countryObj","link","imageBig","setData","countryNames","Object","keys","countries","map","code","key","handlerCountry","obj","AutocompleteCountry","memo","Autocomplete","options","getOptionLabel","option","emoji","renderInput","params","TextField","label","submit","preventDefault","onSubmit","placeholder","InputLabel","id","Select","labelId","MenuItem","idImage","disabled","Committee","committees","body","images","modal","setModal","getCommittee","get","useEffect","getCode","doc","checkCommittee","_id","arrayId","put","deleteCommittee","window","confirm","delete","filter","item","idx","idCommittee","fallback","href","aria-labelledby","aria-describedby","JSON","stringify","undefined","length","alt","Header","to","exact","activeClassName","SelectContest","contests","setContests","loadContests","project","CreateContest","history","useHistory","prize","inputs","setInputs","prizes","setPrizes","handlerInput","push","autoComplete","_","Contest","useParams","info","setInfo","input","setInput","selectors","setSelectors","number","setNumber","text","btnAdd","setBtnAdd","getData","handleChange","prizeId","temp","infos","unshift","delInfo","ElStatus","test","parsePhoneNumber","saveBtnAdd","InputProps","startAdornment","i","CircularProgress","App","router","path","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e0d8fd8a.chunk.js","sourcesContent":["import AvatarEditor from 'react-avatar-editor'\r\nimport Dropzone from 'react-dropzone'\r\nimport React, {useContext, useRef, useState} from \"react\";\r\nimport s from './assets/styles/PhotoEditor.module.css'\r\nimport {Switch, Button} from \"@material-ui/core\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport cn from 'classnames';\r\nimport axios from \"axios\";\r\nimport {toast} from \"react-toastify\";\r\nimport imageCompression from 'browser-image-compression';\r\n\r\n\r\nconst PhotoEditor = ({\r\n                         isCustomResize = false,\r\n                         onLoad\r\n                     }) => {\r\n\r\n    const [image, setImage] = useState(null)\r\n    const [state, setState] = useState({\r\n        isSquare: true,\r\n        allowZoomOut: false,\r\n        position: {x: 0.5, y: 0.5},\r\n        scale: 1,\r\n        rotate: 0,\r\n        borderRadius: 0,\r\n        preview: null,\r\n        width: 200,\r\n        height: 200,\r\n        disableCanvasRotation: false,\r\n        isTransparent: false,\r\n        backgroundColor: null,\r\n    })\r\n    let editorRef = useRef(null)\r\n    const setEditorRef = (editor) => {\r\n        if (!editor) return\r\n        editorRef = editor\r\n    }\r\n\r\n    const handleDrop = dropped => {\r\n        handlerCompress(dropped[0])\r\n    }\r\n    const handleNewImage = (e) => {\r\n        handlerCompress(e.target.files[0])\r\n    }\r\n    const handlerCompress = async (image)=>{\r\n        const options = {\r\n            maxSizeMB: 0.01,\r\n            maxWidthOrHeight: 1920,\r\n            useWebWorker: false,\r\n            maxIteration: 30,\r\n            fileType: \"Image\",\r\n        }\r\n        try {\r\n            // const compressedFile = await imageCompression(image, options);\r\n            // console.log(image)\r\n            // console.log(compressedFile)\r\n            // const file = new File([compressedFile], image.name);\r\n            setImage(image)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    const handlePositionChange = (position) => {\r\n        setState(prev => ({...prev, position}))\r\n    }\r\n    const handleScale = (e) => {\r\n        const scale = parseFloat(e.target.value)\r\n        setState(prev => ({...prev, scale}))\r\n    }\r\n    const handleWidth = (e) => {\r\n        const width = parseInt(e.target.value)\r\n        const update = {width}\r\n        if (state.isSquare) {\r\n            update.height = width\r\n        }\r\n        setState(prev => ({...prev, ...update}))\r\n    }\r\n    const handleHeight = (e) => {\r\n        const height = parseInt(e.target.value)\r\n        const update = {height}\r\n        if (state.isSquare) {\r\n            update.width = height\r\n        }\r\n        setState(prev => ({...prev, ...update}))\r\n    }\r\n    const handleIsSquare = (e) => {\r\n        const isSquare = e.target.checked\r\n        setState(prev => ({...prev, isSquare}))\r\n    }\r\n    const handleSave = async () => {\r\n        const image = editorRef.getImageScaledToCanvas().toDataURL()\r\n        const send = {\r\n            image,\r\n            size: `${state.width}x${state.height}`,\r\n            width: state.width,\r\n            height: state.height,\r\n        }\r\n        try {\r\n            const res = await axios.post('/api/image', send)\r\n            if (res.status !== 200) {\r\n                toast.error(res.data)\r\n            } else {\r\n                onLoad(res.data, {w: state.width, h: state.height})\r\n                toast('Фото добавлено')\r\n            }\r\n        } catch (e) {\r\n            toast.error('Ошибка загрузки фото')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={cn(\r\n            'container bg-white',\r\n            s.wrapper\r\n        )}>\r\n            <Dropzone\r\n                onDrop={handleDrop}\r\n                noClick\r\n                noKeyboard\r\n                maxFiles={1}\r\n            >\r\n                {({getRootProps, getInputProps}) => (\r\n                    <div {...getRootProps()}>\r\n                        New File:\r\n                        <input\r\n                            name=\"newImage\"\r\n                            type=\"file\"\r\n                            onChange={handleNewImage}\r\n                            {...getInputProps()}\r\n                            style={{display: 'initial'}}\r\n                        />\r\n\r\n                        <br/>\r\n\r\n                        <AvatarEditor\r\n                            ref={setEditorRef}\r\n                            image={image}\r\n                            onPositionChange={handlePositionChange}\r\n                            position={state.position}\r\n                            scale={parseFloat(state.scale)}\r\n                            width={state.width}\r\n                            height={state.height}\r\n                            className={s.canvas}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </Dropzone>\r\n            <br/>\r\n            Zoom:\r\n            <input\r\n                name=\"scale\"\r\n                type=\"range\"\r\n                onChange={handleScale}\r\n                min={state.allowZoomOut ? '0.1' : '1'}\r\n                max=\"4\"\r\n                step=\"0.01\"\r\n                defaultValue=\"1\"\r\n            />\r\n            <div className={s.resize} style={{display: !isCustomResize && 'none'}}>\r\n                <Switch\r\n                    checked={state.isSquare}\r\n                    onChange={handleIsSquare}\r\n                    inputProps={{'aria-label': 'secondary checkbox'}}\r\n                />\r\n                <div className={s.inputTwo}>\r\n                    <input\r\n                        name=\"width\"\r\n                        type=\"number\"\r\n                        onChange={handleWidth}\r\n                        min=\"50\"\r\n                        max=\"400\"\r\n                        step=\"10\"\r\n                        value={state.width}\r\n                    />\r\n                    <input\r\n                        width='50px'\r\n                        name=\"height\"\r\n                        type=\"number\"\r\n                        onChange={handleHeight}\r\n                        min=\"50\"\r\n                        max=\"400\"\r\n                        step=\"10\"\r\n                        value={state.height}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <br/>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleSave}>\r\n                Загрузить\r\n            </Button>\r\n            <br/>\r\n            {!!state.preview && (\r\n                <img\r\n                    src={state.preview.img}\r\n                    style={{\r\n                        borderRadius: `${\r\n                            (Math.min(state.preview.height, state.preview.width) +\r\n                                10) *\r\n                            (state.preview.borderRadius / 2 / 100)\r\n                        }px`,\r\n                    }}\r\n                />\r\n            )}\r\n            <div className='p-1 mb-4'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PhotoEditorButton = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const handlerModal = () => {\r\n        setIsOpen(!isOpen)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handlerModal}>\r\n                Добавить фото\r\n            </Button>\r\n            <Modal\r\n                open={isOpen}\r\n                onClose={handlerModal}\r\n            >\r\n                <PhotoEditor\r\n                    isCustomResize={props.isCustomResize}\r\n                    onLoad={props.onLoad}\r\n                />\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PhotoEditorButton","import InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport React, {createContext, memo, useState} from \"react\";\r\nimport countries from \"countries-list\"\r\nimport {Autocomplete} from '@material-ui/lab';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {toast} from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport PhotoEditor from \"./PhotoEditor\";\r\n\r\n\r\n\r\nconst AddCommittee = ({setCommittee}) => {\r\n    const [data, setData] = useState({\r\n        country: '', name: '', typeLink: '', countryObj: null, link: '', imageBig: '', image: ''\r\n    })\r\n\r\n\r\n    const countryCodes = Object.keys(countries.countries);\r\n    const countryNames = countryCodes.map(code => {\r\n        countries.countries[code].key = code\r\n        return countries.countries[code]\r\n    });\r\n\r\n\r\n    const handlerCountry = (e, value) => {\r\n        const obj = value ? {country: value.key, countryObj: value} : {country: null, countryObj: null}\r\n        setData({...data, ...obj})\r\n    }\r\n    const handlerName = (e) => {\r\n        setData({...data, name: e.target.value})\r\n    }\r\n    const handlerTypeLink = (e) => {\r\n        setData({...data, typeLink: e.target.value})\r\n    }\r\n    const handlerLink = (e) => {\r\n        setData({...data, link: e.target.value})\r\n    }\r\n    const handlerAddPhoto = (idImage, options)=>{\r\n        if ((options.w === 200) && (options.h === 200)) {\r\n            setData(prev => ({...prev, imageBig: idImage}))\r\n        }\r\n\r\n        if ((options.w === 170) && (options.h === 170)) {\r\n            setData(prev => ({...prev, image: idImage}))\r\n        }\r\n    }\r\n\r\n\r\n    const AutocompleteCountry = memo(() => (\r\n        <Autocomplete\r\n            onChange={handlerCountry}\r\n            value={data.countryObj}\r\n            options={countryNames}\r\n            getOptionLabel={(option) => option.emoji + ' ' + option.name}\r\n            renderInput={(params) => <TextField {...params} label=\"Странна\"/>}\r\n        />\r\n    ))\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault()\r\n        if (!data.country || !data.name || !data.typeLink || !data.link) return\r\n\r\n        const send = {\r\n            country: data.country,\r\n            name: data.name,\r\n            typeLink: data.typeLink,\r\n            link: data.link,\r\n            imageBig: data.imageBig,\r\n            image: data.image,\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('/api/committee/', send)\r\n            if (res.status !== 200) {\r\n                toast.error(res.data)\r\n            } else {\r\n                setCommittee(prev => ([res.data, ...prev]))\r\n                toast('Наблюдатель добавлен')\r\n                setData({ country: '', name: '', typeLink: '', countryObj: null, link: '', imageBig: '', image: ''})\r\n            }\r\n        } catch (e) {\r\n            toast.error('Ошибка!')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submit}>\r\n            <div className='row mb-2'>\r\n                <div className='col-xl-3 mb-3'>\r\n                    <AutocompleteCountry/>\r\n                </div>\r\n                <div className='col-xl-9 '>\r\n                    <TextField\r\n                        className='w-100'\r\n                        value={data.name}\r\n                        onChange={handlerName}\r\n                        label='Имя Фамилия'\r\n                        name='name'\r\n                        placeholder='Введите...'\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className='row mb-2'>\r\n                <div className='col-xl-3 mb-3'>\r\n                    <InputLabel id=\"toInfo\">Соц. сеть</InputLabel>\r\n                    <Select\r\n                        labelId='toInfo'\r\n                        className='w-100'\r\n                        name='type'\r\n                        value={data.typeLink}\r\n                        onChange={handlerTypeLink}\r\n                    >\r\n                        <MenuItem value='inst'>Инстаграм</MenuItem>\r\n                        <MenuItem value='fb'>Facebook</MenuItem>\r\n                        <MenuItem value='vk'>Вконтакте</MenuItem>\r\n                        <MenuItem value='te'>Телеграм</MenuItem>\r\n                        <MenuItem value='lin'>Linkedin</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <div className='col-xl-9'>\r\n                    <TextField className='w-100' value={data.link} onChange={handlerLink}\r\n                               label='Сылка' placeholder='Введите...'\r\n                    />\r\n                </div>\r\n                <PhotoEditor\r\n                    className='w-100'\r\n                    isCustomResize={true}\r\n                    onLoad={handlerAddPhoto}\r\n                />\r\n            </div>\r\n            <div className='row mb-2 mt-4'>\r\n                <div className=\"col\">\r\n                    <Button className='w-100' variant=\"contained\"\r\n                            color='primary' type='submit'\r\n                            disabled={!data.name || !data.country || !data.typeLink || !data.link}\r\n                    >\r\n                        Добавить\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddCommittee","import React, {useEffect, useState} from \"react\"\r\nimport AddCommittee from \"../components/AddCommittee\";\r\nimport {toast} from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport Flag from \"react-world-flags\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport Modal from \"@material-ui/core/Modal\";\r\n\r\nconst Committee = () => {\r\n    const [committees, setCommittee] = useState([])\r\n    const [modal, setModal] = useState({\r\n        open: false, body: null, images: []\r\n    })\r\n\r\n    const getCommittee = async () => {\r\n        try {\r\n            const res = await axios.get('/api/committee/')\r\n            if (res.status !== 200) {\r\n                toast.error(res.data)\r\n            } else {\r\n                setCommittee(res.data)\r\n            }\r\n        } catch (e) {\r\n            toast.error('Ошибка!')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCommittee()\r\n    }, [])\r\n\r\n    const getCode = async (id) => {\r\n        let body = {}\r\n        let images = []\r\n        try {\r\n            const res = await axios.get('/api/committee/' + id)\r\n            if (res.status !== 200) {\r\n                toast.error(res.data)\r\n            } else {\r\n                body = res.data.doc\r\n                if (res.data.images){\r\n                    images = res.data.images\r\n                }\r\n            }\r\n        } catch (e) {\r\n            toast.error('Ошибка!')\r\n        }\r\n\r\n        setModal({...modal, body, open: !modal.open, images})\r\n    }\r\n\r\n    const checkCommittee = async (_id, arrayId) => {\r\n        try {\r\n            const send = {\r\n                status: 'done'\r\n            }\r\n            const res = await axios.put('/api/committee/' + _id, send)\r\n            if (res.status !== 200) {\r\n                toast.error(res.data)\r\n            } else {\r\n                committees[arrayId].status = 'done'\r\n                setCommittee([...committees])\r\n                toast('Успешное подтверждение')\r\n            }\r\n        } catch (e) {\r\n            toast.error('Ошибка!')\r\n        }\r\n    }\r\n\r\n    const deleteCommittee = async (id) => {\r\n        const result = window.confirm(\"Вы дейтсвильно хотите удалить его?\")\r\n        if (!result) return\r\n        try {\r\n            const res = await axios.delete('/api/committee/' + id)\r\n            if (res.status !== 200) {\r\n                toast.error(res.data)\r\n            } else {\r\n                setCommittee(committees.filter((item) => item._id !== id))\r\n            }\r\n        } catch (e) {\r\n            toast.error('Ошибка!')\r\n        }\r\n    }\r\n\r\n    const handleModal = () => {\r\n        setModal({...modal, open: !modal.open})\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container-xl'>\r\n            <div className='row'>\r\n                <AddCommittee setCommittee={setCommittee}/>\r\n            </div>\r\n            <div className='row '>\r\n                {\r\n                    committees.map((item, idx) => {\r\n                        return (\r\n                            <div className='col-3 bg-light border-dark border p-3 ' key={item.idCommittee}>\r\n                                <div className='row align-items-center mb-2'>\r\n                                    <div className=\"col\">\r\n                                        {\r\n                                            (item.status === 'await') ?\r\n                                                <CachedIcon className='awaitFound'/>\r\n                                                :\r\n                                                <DoneIcon className='doneFound'/>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col fw-bold\"># {item.idCommittee}</div>\r\n                                    <Flag className=\"col\" code={item.country} height={20}\r\n                                          fallback={<span>?!</span>}/>\r\n                                </div>\r\n                                <div className=\"row mb-2\">\r\n                                    <div className=\"col\">\r\n                                        {item.name}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mb-2 \">\r\n                                    <div className=\"col\">\r\n                                        {item.typeLink}\r\n                                    </div>\r\n                                    <a href={item.link} className=\"col\">\r\n                                        Сылка\r\n                                    </a>\r\n                                </div>\r\n                                <div className='row mt-4 mb-1 align-items-center justify-content-end'>\r\n                                    <CodeIcon className='col pointer' onClick={() => getCode(item._id)}/>\r\n                                    {\r\n                                        (item.status !== 'done') &&\r\n                                        <>\r\n                                            <CheckCircleIcon className='col pointer'\r\n                                                             onClick={() => checkCommittee(item._id, idx)}/>\r\n                                            <DeleteForeverIcon className='col pointer'\r\n                                                               onClick={() => deleteCommittee(item._id)}/>\r\n                                        </>\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <Modal\r\n                open={modal.open}\r\n                onClose={handleModal}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <div className='container-xl mt-5 bg-white p-5'>\r\n                    <pre>\r\n                        {JSON.stringify(modal.body, undefined, 3)}\r\n                    </pre>\r\n                    <div className='row'>\r\n                    {modal.images.length ?\r\n                        modal.images.map((item)=>{\r\n                            return(\r\n                                <div className='col-3'>\r\n                                    <p>{item.size}</p>\r\n                                    <img src={item.image} alt={item.size} height={item.height} width={item.width}/>\r\n                                </div>\r\n                            )\r\n                        })\r\n                        :\r\n                        <div>Картинок нет</div>\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Committee","import {NavLink} from \"react-router-dom\";\r\nimport Committee from \"../pages/Committee\";\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand navbar-light bg-light\">\r\n            <div className=\"container\">\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <NavLink className='nav-link' to='/' exact activeClassName='active'>\r\n                            Главная\r\n                        </NavLink>\r\n                        <NavLink className='nav-link' to='/create' activeClassName='active'>\r\n                            Создать\r\n                        </NavLink>\r\n                        <NavLink className='nav-link' to='/committee' activeClassName='active'>\r\n                            Комитет\r\n                        </NavLink>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header","import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst SelectContest = () => {\r\n    const [contests, setContests] = useState([])\r\n\r\n    const loadContests = async () => {\r\n        const res = await axios.get('/api/contest/')\r\n        if (res.status !== 200) return\r\n        setContests(res.data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadContests()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='container-xl'>\r\n            <div className='row'>\r\n                {\r\n                    !contests.length ? 'Еще нет конкурсов' :\r\n                        contests.map((item, idx) => {\r\n                            return (\r\n                                <NavLink to={'/contest/'+item._id} className='col-xl-3 col-md-10 border m-xl-3 p-3 text-decoration-none' key={idx}>\r\n                                    <div className='text-uppercase fs-4 pointer'>{item.name}</div>\r\n                                    <br/>\r\n                                    <div className='fs-6'>{item.project}</div>\r\n                                </NavLink>\r\n                            )\r\n                        })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectContest","import Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport axios from \"axios\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {toast} from \"react-toastify\";\r\n\r\n\r\nconst CreateContest = () => {\r\n    const history = useHistory()\r\n    const [inputs, setInputs] = useState({\r\n        name: '', project: '', prize: '',\r\n    })\r\n    const [prizes, setPrizes] = useState([])\r\n\r\n    const handlerInput = (e) => {\r\n        setInputs({...inputs, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const addPrize = () => {\r\n        if (!inputs.prize) return\r\n        setPrizes([inputs.prize, ...prizes])\r\n        setInputs({...inputs, prize: ''})\r\n    }\r\n    const delPrize = (id) => {\r\n        setPrizes(prizes.filter((_, idx) => idx !== id))\r\n    }\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault()\r\n        const {name, project} = inputs\r\n        if (!name || !project || !prizes.length) return\r\n        const res = await axios.post('/api/contest/', {name, project, prizes})\r\n        if (res.status !== 200) {\r\n            toast.error(res.data)\r\n        } else {\r\n            toast('Конкурс создан')\r\n            history.push('/contest/' + res.data._id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submit} className='container-xl' autoComplete=\"off\">\r\n            <div className='row mb-2'>\r\n                <TextField label='Название' name='name' value={inputs.name} onChange={handlerInput}/>\r\n                <TextField label=\"Проект\" name='project' value={inputs.project} onChange={handlerInput}/>\r\n                <TextField label=\"Приз\" name='prize' value={inputs.prize} onChange={handlerInput}\r\n                           placeholder='Например: 1000 долей'/>\r\n                <Button className='mt-3 mb-4' variant=\"contained\" color=\"primary\" onClick={addPrize}>Добавить приз</Button>\r\n\r\n                {prizes.map((item, idx) => (\r\n                    <div className='row-md-12 mb-2 border-bottom w-100' key={idx}>\r\n                        <div className='col-xl-10 col-md-12 w-100'>{item}</div>\r\n                        <Button className='col-xl-2 col-md-12 w-100' color='secondary'\r\n                                onClick={() => delPrize(idx)}>Удалить</Button>\r\n                    </div>\r\n                ))}\r\n\r\n            </div>\r\n            <div className='row mt-5'>\r\n                <Button variant=\"contained\" color=\"primary\" type='submit'>Создать конкурс</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateContest","import {useParams} from 'react-router-dom'\r\nimport React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {CircularProgress} from '@material-ui/core';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport parsePhoneNumber from 'libphonenumber-js'\r\nimport Flag from 'react-world-flags'\r\nimport {toast} from \"react-toastify\";\r\n\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\n\r\n\r\nconst Contest = () => {\r\n    const {id} = useParams()\r\n    const [info, setInfo] = useState(null)\r\n    const [input, setInput] = useState('')\r\n    const [selectors, setSelectors] = useState({\r\n        prize: '', type: '',\r\n    })\r\n    const [number, setNumber] = useState(null)\r\n    const [btnAdd, setBtnAdd] = useState({\r\n        text: 'Добавить участника', color: \"primary\"\r\n    })\r\n\r\n    const getData = async (id) => {\r\n        const res = await axios.get('/api/contest/' + id)\r\n        if (res.status !== 200) {\r\n            toast.error(res.data)\r\n        } else {\r\n            setInfo(res.data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData(id)\r\n    }, [id])\r\n\r\n    const handlerInput = (e) => {\r\n        let {value} = e.target\r\n        if (selectors.type === 'phone') {\r\n            if (!(/^[\\d,+]*$/).test(value)) return\r\n            const number = parsePhoneNumber(value)\r\n            let saveBtnAdd = {\r\n                text: 'Добавить участника',\r\n                color: 'primary'\r\n            }\r\n            if (!number) {\r\n                saveBtnAdd = {\r\n                    text: 'Введите корректный номер',\r\n                    color: 'secondary'\r\n                }\r\n            }\r\n            setBtnAdd(saveBtnAdd)\r\n            setNumber(number)\r\n        }\r\n        setInput(value)\r\n    }\r\n    const handleChange = e => {\r\n        setSelectors({...selectors, [e.target.name]: e.target.value})\r\n        switch (e.target.name) {\r\n            case 'prize':\r\n                break;\r\n            case 'type':\r\n                let saveBtnAdd = {\r\n                    text: 'Добавить участника',\r\n                    color: 'primary'\r\n                }\r\n                setBtnAdd(saveBtnAdd)\r\n        }\r\n    }\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault()\r\n        if (!input || !selectors.type || !selectors.prize) return\r\n        const res = await axios.post('/api/contest/' + info._id, {\r\n            data: input,\r\n            type: selectors.type,\r\n            prizeId: selectors.prize\r\n        })\r\n        if (res.status !== 200) {\r\n            toast.error(res.data)\r\n        } else {\r\n            const temp = info\r\n            temp.infos.unshift(res.data)\r\n            setInfo({...temp})\r\n            toast('Запись добавлена')\r\n        }\r\n    }\r\n\r\n    const delInfo = async (id) => {\r\n        const res = await axios.delete('/api/contest/' + info._id +'/'+id)\r\n        if (res.status !== 200){\r\n            toast.error(res.data)\r\n        } else {\r\n            const temp = info\r\n            temp.infos = temp.infos.filter((item)=>item._id !== id)\r\n            setInfo({...temp})\r\n            toast('Запись удалена')\r\n        }\r\n    }\r\n\r\n    let ElStatus = ({status})=>{\r\n        switch (status) {\r\n            case 'await':\r\n                return <CachedIcon className='awaitFound'/>\r\n            case 'done':\r\n                return <DoneIcon className='doneFound'/>\r\n            case 'not':\r\n                return <CloseIcon className='notFound'/>\r\n        }\r\n\r\n    }\r\n\r\n\r\n    if (!info) return <div className='container text-center'><CircularProgress/></div>\r\n    return (\r\n        <div className='container-xl'>\r\n            <div className='mb-2 mt-2 text-center bg-light p-3 text-dark fw-bold'>\r\n                {info.project} | {info.name} | {info._id}\r\n            </div>\r\n            <div>\r\n                <form onSubmit={submit}>\r\n                    <div className='row mb-2 mt-4'>\r\n                        <div className='col-12 mb-4'>\r\n                            <InputLabel id=\"toPrize\">Приз</InputLabel>\r\n                            <Select\r\n                                labelId='toPrize'\r\n                                className='w-100'\r\n                                name='prize'\r\n                                value={selectors.prize}\r\n                                onChange={handleChange}\r\n                            >\r\n                                {info.prizes.map((item, id) => {\r\n                                    return <MenuItem value={item._id}>{item.data}</MenuItem>\r\n                                })}\r\n                            </Select>\r\n                        </div>\r\n                        <div className='col-xl-2 col-md-12 mb-4'>\r\n                            <InputLabel id=\"toInfo\">Тип информации</InputLabel>\r\n                            <Select\r\n                                labelId='toInfo'\r\n                                className='w-100'\r\n                                name='type'\r\n                                value={selectors.type}\r\n                                onChange={handleChange}\r\n                            >\r\n                                <MenuItem value='login'>Логин</MenuItem>\r\n                                <MenuItem value='phone'>Телефона</MenuItem>\r\n                                <MenuItem value='any'>Другое</MenuItem>\r\n                            </Select>\r\n                        </div>\r\n                        <TextField className='col-xl-10 col-md-12 w-md-100' value={input} onChange={handlerInput}\r\n                                   label='Добавить' name='name' placeholder='Добавить участника'\r\n                                   InputProps={{\r\n                                       startAdornment: ((selectors.type === 'phone') && number) &&\r\n                                           <Flag code={number.country} height={20} fallback={<span>?!</span>}/>,\r\n                                   }}\r\n                        />\r\n                    </div>\r\n                    <Button className='row-12 mb-5 w-100' variant=\"contained\"\r\n                            color={btnAdd.color} type='submit'\r\n                            disabled={!selectors.type || !selectors.prize || ((selectors.type === 'phone') && !number)}\r\n                    >\r\n                        {btnAdd.text}\r\n                    </Button>\r\n                </form>\r\n                {   (!selectors.type || !selectors.prize) &&\r\n                    <div className='row mx-auto mb-5 text-danger'>Выберите тип информации и приз</div>\r\n                }\r\n                <div className='row'>\r\n                    <div className='col-12 mt-3'>\r\n                        <div className='row'>\r\n                            {info.infos.map((item, idx) => {\r\n                                const status = item.status || 'await'\r\n                                return (\r\n                                    <div className={`col-12 mb-3 border-bottom ${status}`} key={idx}>\r\n                                        <div className='row'>\r\n                                            <div className='col-xl-10 col-md-12'><ElStatus status={status} /> {item.type}: {item.data} | prize: {(info.prizes.\r\n                                            filter((i)=>i._id === item.prizeId))[0].data}</div>\r\n                                            <Button className='col-xl-2 col-md-12' color='secondary'\r\n                                                    disabled={(status === 'done')}\r\n                                                    onClick={() => delInfo(item._id)}>Удалить</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contest","import './App.css';\nimport Header from \"./components/Header\";\nimport {useRotes} from \"./router\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {ToastContainer, toast, useToast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n\n    const router = useRotes()\n\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Header/>\n                {router}\n            </div>\n            <ToastContainer/>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import {Switch, Route, Redirect } from 'react-router-dom'\r\nimport Select from \"./pages/SelectContest\";\r\nimport Create from \"./pages/CreateContest\";\r\nimport Contest from \"./pages/Contest\";\r\nimport Committee from \"./pages/Committee\";\r\n\r\n\r\nexport const useRotes = ()=>{\r\n\r\n    return(\r\n        <Switch>\r\n            <Route path='/' exact>\r\n                <Select/>\r\n            </Route>\r\n            <Route path='/create'>\r\n                <Create/>\r\n            </Route>\r\n            <Route path='/contest/:id'>\r\n                <Contest/>\r\n            </Route>\r\n            <Route path='/committee'>\r\n                <Committee/>\r\n            </Route>\r\n\r\n            <Redirect to='/'/>\r\n        </Switch>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PhotoEditor_wrapper__2dLmb\",\"inputTwo\":\"PhotoEditor_inputTwo__1EHbp\",\"canvas\":\"PhotoEditor_canvas__3KAY2\"};"],"sourceRoot":""}