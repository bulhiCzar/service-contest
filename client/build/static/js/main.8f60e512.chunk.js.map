{"version":3,"sources":["components/AddCommittee.js","pages/Committee.js","components/Header.js","pages/SelectContest.js","pages/CreateContest.js","pages/Contest.js","App.js","router.js","index.js"],"names":["AddCommittee","setCommittee","useState","country","name","typeLink","countryObj","link","data","setData","countryNames","Object","keys","countries","map","code","key","handlerCountry","e","value","obj","AutocompleteCountry","memo","Autocomplete","onChange","options","getOptionLabel","option","emoji","renderInput","params","TextField","label","submit","a","preventDefault","send","axios","post","res","status","toast","error","prev","onSubmit","className","target","placeholder","InputLabel","id","Select","labelId","MenuItem","Button","variant","color","type","disabled","Committee","committees","open","body","modal","setModal","getCommittee","get","useEffect","getCode","console","log","checkCommittee","_id","arrayId","put","deleteCommittee","window","confirm","delete","filter","item","idx","idCommittee","height","fallback","href","onClick","Modal","onClose","aria-labelledby","aria-describedby","JSON","stringify","undefined","Header","to","exact","activeClassName","SelectContest","contests","setContests","loadContests","length","project","CreateContest","history","useHistory","prize","inputs","setInputs","prizes","setPrizes","handlerInput","push","autoComplete","_","Contest","useParams","info","setInfo","input","setInput","selectors","setSelectors","number","setNumber","text","btnAdd","setBtnAdd","getData","handleChange","prizeId","temp","infos","unshift","delInfo","ElStatus","test","parsePhoneNumber","saveBtnAdd","InputProps","startAdornment","i","CircularProgress","App","router","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f60e512.chunk.js","sourcesContent":["import InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport React, {memo, useState} from \"react\";\r\nimport countries from \"countries-list\"\r\nimport {Autocomplete} from '@material-ui/lab';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {toast} from \"react-toastify\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst AddCommittee = ({setCommittee}) => {\r\n    const [data, setData] = useState({\r\n        country: '', name: '', typeLink: '', countryObj: null, link: ''\r\n    })\r\n\r\n\r\n    const countryCodes = Object.keys(countries.countries);\r\n    const countryNames = countryCodes.map(code => {\r\n        countries.countries[code].key = code\r\n        return countries.countries[code]\r\n    });\r\n\r\n\r\n    const handlerCountry = (e, value) => {\r\n        const obj = value ? {country: value.key, countryObj: value} : {country: null, countryObj: null}\r\n        setData({...data, ...obj})\r\n    }\r\n    const handlerName = (e) => {\r\n        setData({...data, name: e.target.value})\r\n    }\r\n    const handlerTypeLink = (e) => {\r\n        setData({...data, typeLink: e.target.value})\r\n    }\r\n    const handlerLink = (e) => {\r\n        setData({...data, link: e.target.value})\r\n    }\r\n\r\n\r\n    const AutocompleteCountry = memo(() => (\r\n        <Autocomplete\r\n            onChange={handlerCountry}\r\n            value={data.countryObj}\r\n            options={countryNames}\r\n            getOptionLabel={(option) => option.emoji + ' ' + option.name}\r\n            renderInput={(params) => <TextField {...params} label=\"Странна\"/>}\r\n        />\r\n    ))\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault()\r\n        if (!data.country || !data.name || !data.typeLink || !data.link) return\r\n\r\n        const send = {\r\n            country: data.country,\r\n            name: data.name,\r\n            typeLink: data.typeLink,\r\n            link: data.link,\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('/api/committee/', send)\r\n            if (res.status !== 200) {\r\n                toast.error(res.data)\r\n            } else {\r\n                setCommittee(prev => ([res.data, ...prev]))\r\n                toast('Наблюдатель добавлен')\r\n            }\r\n        } catch (e) {\r\n            toast.error('Ошибка!')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submit}>\r\n            <div className='row mb-2'>\r\n                <div className='col-xl-3 mb-3'>\r\n                    <AutocompleteCountry/>\r\n                </div>\r\n                <div className='col-xl-9 '>\r\n                    <TextField\r\n                        className='w-100'\r\n                        value={data.name}\r\n                        onChange={handlerName}\r\n                        label='Имя Фамилия'\r\n                        name='name'\r\n                        placeholder='Введите...'\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className='row mb-2'>\r\n                <div className='col-xl-3 mb-3'>\r\n                    <InputLabel id=\"toInfo\">Соц. сеть</InputLabel>\r\n                    <Select\r\n                        labelId='toInfo'\r\n                        className='w-100'\r\n                        name='type'\r\n                        value={data.typeLink}\r\n                        onChange={handlerTypeLink}\r\n                    >\r\n                        <MenuItem value='inst'>Инстаграм</MenuItem>\r\n                        <MenuItem value='fb'>Facebook</MenuItem>\r\n                        <MenuItem value='vk'>Вконтакте</MenuItem>\r\n                        <MenuItem value='te'>Телеграм</MenuItem>\r\n                        <MenuItem value='lin'>Linkedin</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <div className='col-xl-9'>\r\n                    <TextField className='w-100' value={data.link} onChange={handlerLink}\r\n                               label='Сылка' placeholder='Введите...'\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className='row mb-2'>\r\n                <div className=\"col\">\r\n                    <Button className='w-100' variant=\"contained\"\r\n                            color='primary' type='submit'\r\n                            disabled={!data.name || !data.country || !data.typeLink || !data.link}\r\n                    >\r\n                        Добавить\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddCommittee","import React, {useEffect, useState} from \"react\"\r\nimport AddCommittee from \"../components/AddCommittee\";\r\nimport {toast} from \"react-toastify\";\r\nimport axios from \"axios\";\r\nimport Flag from \"react-world-flags\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport Modal from \"@material-ui/core/Modal\";\r\n\r\nconst Committee = () => {\r\n    const [committees, setCommittee] = useState([])\r\n    const [modal, setModal] = useState({\r\n        open: false, body: null\r\n    })\r\n\r\n    const getCommittee = async () => {\r\n        try {\r\n            const res = await axios.get('/api/committee/')\r\n            if (res.status !== 200) {\r\n                toast.error(res.data)\r\n            } else {\r\n                setCommittee(res.data)\r\n            }\r\n        } catch (e) {\r\n            toast.error('Ошибка!')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCommittee()\r\n    }, [])\r\n\r\n    const getCode = async (id) => {\r\n        // handleModal()\r\n        let body = {}\r\n        try {\r\n            const res = await axios.get('/api/committee/' + id)\r\n            if (res.status !== 200) {\r\n                toast.error(res.data)\r\n            } else {\r\n                body = res.data\r\n            }\r\n        } catch (e) {\r\n            toast.error('Ошибка!')\r\n        }\r\n        console.log(body)\r\n        setModal({...modal, body, open: !modal.open})\r\n\r\n        // JSON.stringify(data, undefined, 2);\r\n\r\n    }\r\n\r\n    const checkCommittee = async (_id, arrayId) => {\r\n        try {\r\n            const send = {\r\n                status: 'done'\r\n            }\r\n            const res = await axios.put('/api/committee/' + _id, send)\r\n            if (res.status !== 200) {\r\n                toast.error(res.data)\r\n            } else {\r\n                committees[arrayId].status = 'done'\r\n                setCommittee([...committees])\r\n                toast('Успешное подтверждение')\r\n            }\r\n        } catch (e) {\r\n            toast.error('Ошибка!')\r\n        }\r\n    }\r\n\r\n    const deleteCommittee = async (id) => {\r\n        const result = window.confirm(\"Вы дейтсвильно хотите удалить его?\")\r\n        if (!result) return\r\n        try {\r\n            const res = await axios.delete('/api/committee/' + id)\r\n            if (res.status !== 200) {\r\n                toast.error(res.data)\r\n            } else {\r\n                setCommittee(committees.filter((item) => item._id !== id))\r\n            }\r\n        } catch (e) {\r\n            toast.error('Ошибка!')\r\n        }\r\n    }\r\n\r\n    const handleModal = () => {\r\n        setModal({...modal, open: !modal.open})\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='container-xl'>\r\n            <div className='row'>\r\n                <AddCommittee setCommittee={setCommittee}/>\r\n            </div>\r\n            <div className='row '>\r\n                {\r\n                    committees.map((item, idx) => {\r\n                        return (\r\n                            <div className='col-3 bg-light border-dark border p-3 ' key={item.idCommittee}>\r\n                                <div className='row align-items-center mb-2'>\r\n                                    <div className=\"col\">\r\n                                        {\r\n                                            (item.status === 'await') ?\r\n                                                <CachedIcon className='awaitFound'/>\r\n                                                :\r\n                                                <DoneIcon className='doneFound'/>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"col fw-bold\"># {item.idCommittee}</div>\r\n                                    <Flag className=\"col\" code={item.country} height={20}\r\n                                          fallback={<span>?!</span>}/>\r\n                                </div>\r\n                                <div className=\"row mb-2\">\r\n                                    <div className=\"col\">\r\n                                        {item.name}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mb-2 \">\r\n                                    <div className=\"col\">\r\n                                        {item.typeLink}\r\n                                    </div>\r\n                                    <a href={item.link} className=\"col\">\r\n                                        Сылка\r\n                                    </a>\r\n                                </div>\r\n                                <div className='row mt-4 mb-1 align-items-center justify-content-end'>\r\n                                    <CodeIcon className='col pointer' onClick={() => getCode(item._id)}/>\r\n                                    {\r\n                                        (item.status !== 'done') &&\r\n                                        <>\r\n                                            <CheckCircleIcon className='col pointer'\r\n                                                             onClick={() => checkCommittee(item._id, idx)}/>\r\n                                            <DeleteForeverIcon className='col pointer'\r\n                                                               onClick={() => deleteCommittee(item._id)}/>\r\n                                        </>\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <Modal\r\n                open={modal.open}\r\n                onClose={handleModal}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <div className='container-xl mt-5 bg-white p-5'>\r\n                    <pre>\r\n                        {JSON.stringify(modal.body, undefined, 3)}\r\n                    </pre>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Committee","import {NavLink} from \"react-router-dom\";\r\nimport Committee from \"../pages/Committee\";\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand navbar-light bg-light\">\r\n            <div className=\"container\">\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <NavLink className='nav-link' to='/' exact activeClassName='active'>\r\n                            Главная\r\n                        </NavLink>\r\n                        <NavLink className='nav-link' to='/create' activeClassName='active'>\r\n                            Создать\r\n                        </NavLink>\r\n                        <NavLink className='nav-link' to='/committee' activeClassName='active'>\r\n                            Комитет\r\n                        </NavLink>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header","import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst SelectContest = () => {\r\n    const [contests, setContests] = useState([])\r\n\r\n    const loadContests = async () => {\r\n        const res = await axios.get('/api/contest/')\r\n        if (res.status !== 200) return\r\n        setContests(res.data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadContests()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='container-xl'>\r\n            <div className='row'>\r\n                {\r\n                    !contests.length ? 'Еще нет конкурсов' :\r\n                        contests.map((item, idx) => {\r\n                            return (\r\n                                <NavLink to={'/contest/'+item._id} className='col-xl-3 col-md-10 border m-xl-3 p-3 text-decoration-none' key={idx}>\r\n                                    <div className='text-uppercase fs-4 pointer'>{item.name}</div>\r\n                                    <br/>\r\n                                    <div className='fs-6'>{item.project}</div>\r\n                                </NavLink>\r\n                            )\r\n                        })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectContest","import Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport axios from \"axios\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {toast} from \"react-toastify\";\r\n\r\n\r\nconst CreateContest = () => {\r\n    const history = useHistory()\r\n    const [inputs, setInputs] = useState({\r\n        name: '', project: '', prize: '',\r\n    })\r\n    const [prizes, setPrizes] = useState([])\r\n\r\n    const handlerInput = (e) => {\r\n        setInputs({...inputs, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const addPrize = () => {\r\n        if (!inputs.prize) return\r\n        setPrizes([inputs.prize, ...prizes])\r\n        setInputs({...inputs, prize: ''})\r\n    }\r\n    const delPrize = (id) => {\r\n        setPrizes(prizes.filter((_, idx) => idx !== id))\r\n    }\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault()\r\n        const {name, project} = inputs\r\n        if (!name || !project || !prizes.length) return\r\n        const res = await axios.post('/api/contest/', {name, project, prizes})\r\n        if (res.status !== 200) {\r\n            toast.error(res.data)\r\n        } else {\r\n            toast('Конкурс создан')\r\n            history.push('/contest/' + res.data._id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submit} className='container-xl' autoComplete=\"off\">\r\n            <div className='row mb-2'>\r\n                <TextField label='Название' name='name' value={inputs.name} onChange={handlerInput}/>\r\n                <TextField label=\"Проект\" name='project' value={inputs.project} onChange={handlerInput}/>\r\n                <TextField label=\"Приз\" name='prize' value={inputs.prize} onChange={handlerInput}\r\n                           placeholder='Например: 1000 долей'/>\r\n                <Button className='mt-3 mb-4' variant=\"contained\" color=\"primary\" onClick={addPrize}>Добавить приз</Button>\r\n\r\n                {prizes.map((item, idx) => (\r\n                    <div className='row-md-12 mb-2 border-bottom w-100' key={idx}>\r\n                        <div className='col-xl-10 col-md-12 w-100'>{item}</div>\r\n                        <Button className='col-xl-2 col-md-12 w-100' color='secondary'\r\n                                onClick={() => delPrize(idx)}>Удалить</Button>\r\n                    </div>\r\n                ))}\r\n\r\n            </div>\r\n            <div className='row mt-5'>\r\n                <Button variant=\"contained\" color=\"primary\" type='submit'>Создать конкурс</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateContest","import {useParams} from 'react-router-dom'\r\nimport React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {CircularProgress} from '@material-ui/core';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport parsePhoneNumber from 'libphonenumber-js'\r\nimport Flag from 'react-world-flags'\r\nimport {toast} from \"react-toastify\";\r\n\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\n\r\n\r\nconst Contest = () => {\r\n    const {id} = useParams()\r\n    const [info, setInfo] = useState(null)\r\n    const [input, setInput] = useState('')\r\n    const [selectors, setSelectors] = useState({\r\n        prize: '', type: '',\r\n    })\r\n    const [number, setNumber] = useState(null)\r\n    const [btnAdd, setBtnAdd] = useState({\r\n        text: 'Добавить участника', color: \"primary\"\r\n    })\r\n\r\n    const getData = async (id) => {\r\n        const res = await axios.get('/api/contest/' + id)\r\n        if (res.status !== 200) {\r\n            toast.error(res.data)\r\n        } else {\r\n            setInfo(res.data)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData(id)\r\n    }, [id])\r\n\r\n    const handlerInput = (e) => {\r\n        let {value} = e.target\r\n        if (selectors.type === 'phone') {\r\n            if (!(/^[\\d,+]*$/).test(value)) return\r\n            const number = parsePhoneNumber(value)\r\n            let saveBtnAdd = {\r\n                text: 'Добавить участника',\r\n                color: 'primary'\r\n            }\r\n            if (!number) {\r\n                saveBtnAdd = {\r\n                    text: 'Введите корректный номер',\r\n                    color: 'secondary'\r\n                }\r\n            }\r\n            setBtnAdd(saveBtnAdd)\r\n            setNumber(number)\r\n        }\r\n        setInput(value)\r\n    }\r\n    const handleChange = e => {\r\n        setSelectors({...selectors, [e.target.name]: e.target.value})\r\n        switch (e.target.name) {\r\n            case 'prize':\r\n                break;\r\n            case 'type':\r\n                let saveBtnAdd = {\r\n                    text: 'Добавить участника',\r\n                    color: 'primary'\r\n                }\r\n                setBtnAdd(saveBtnAdd)\r\n        }\r\n    }\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault()\r\n        if (!input || !selectors.type || !selectors.prize) return\r\n        const res = await axios.post('/api/contest/' + info._id, {\r\n            data: input,\r\n            type: selectors.type,\r\n            prizeId: selectors.prize\r\n        })\r\n        if (res.status !== 200) {\r\n            toast.error(res.data)\r\n        } else {\r\n            const temp = info\r\n            temp.infos.unshift(res.data)\r\n            setInfo({...temp})\r\n            toast('Запись добавлена')\r\n        }\r\n    }\r\n\r\n    const delInfo = async (id) => {\r\n        const res = await axios.delete('/api/contest/' + info._id +'/'+id)\r\n        if (res.status !== 200){\r\n            toast.error(res.data)\r\n        } else {\r\n            const temp = info\r\n            temp.infos = temp.infos.filter((item)=>item._id !== id)\r\n            setInfo({...temp})\r\n            toast('Запись удалена')\r\n        }\r\n    }\r\n\r\n    let ElStatus = ({status})=>{\r\n        switch (status) {\r\n            case 'await':\r\n                return <CachedIcon className='awaitFound'/>\r\n            case 'done':\r\n                return <DoneIcon className='doneFound'/>\r\n            case 'not':\r\n                return <CloseIcon className='notFound'/>\r\n        }\r\n\r\n    }\r\n\r\n\r\n    if (!info) return <div className='container text-center'><CircularProgress/></div>\r\n    return (\r\n        <div className='container-xl'>\r\n            <div className='mb-2 mt-2 text-center bg-light p-3 text-dark fw-bold'>\r\n                {info.project} | {info.name} | {info._id}\r\n            </div>\r\n            <div>\r\n                <form onSubmit={submit}>\r\n                    <div className='row mb-2 mt-4'>\r\n                        <div className='col-12 mb-4'>\r\n                            <InputLabel id=\"toPrize\">Приз</InputLabel>\r\n                            <Select\r\n                                labelId='toPrize'\r\n                                className='w-100'\r\n                                name='prize'\r\n                                value={selectors.prize}\r\n                                onChange={handleChange}\r\n                            >\r\n                                {info.prizes.map((item, id) => {\r\n                                    return <MenuItem value={item._id}>{item.data}</MenuItem>\r\n                                })}\r\n                            </Select>\r\n                        </div>\r\n                        <div className='col-xl-2 col-md-12 mb-4'>\r\n                            <InputLabel id=\"toInfo\">Тип информации</InputLabel>\r\n                            <Select\r\n                                labelId='toInfo'\r\n                                className='w-100'\r\n                                name='type'\r\n                                value={selectors.type}\r\n                                onChange={handleChange}\r\n                            >\r\n                                <MenuItem value='login'>Логин</MenuItem>\r\n                                <MenuItem value='phone'>Телефона</MenuItem>\r\n                                <MenuItem value='any'>Другое</MenuItem>\r\n                            </Select>\r\n                        </div>\r\n                        <TextField className='col-xl-10 col-md-12 w-md-100' value={input} onChange={handlerInput}\r\n                                   label='Добавить' name='name' placeholder='Добавить участника'\r\n                                   InputProps={{\r\n                                       startAdornment: ((selectors.type === 'phone') && number) &&\r\n                                           <Flag code={number.country} height={20} fallback={<span>?!</span>}/>,\r\n                                   }}\r\n                        />\r\n                    </div>\r\n                    <Button className='row-12 mb-5 w-100' variant=\"contained\"\r\n                            color={btnAdd.color} type='submit'\r\n                            disabled={!selectors.type || !selectors.prize || ((selectors.type === 'phone') && !number)}\r\n                    >\r\n                        {btnAdd.text}\r\n                    </Button>\r\n                </form>\r\n                {   (!selectors.type || !selectors.prize) &&\r\n                    <div className='row mx-auto mb-5 text-danger'>Выберите тип информации и приз</div>\r\n                }\r\n                <div className='row'>\r\n                    <div className='col-12 mt-3'>\r\n                        <div className='row'>\r\n                            {info.infos.map((item, idx) => {\r\n                                const status = item.status || 'await'\r\n                                // if (item.prizeId !== selectors.prize) return <></>\r\n                                return (\r\n                                    <div className={`col-12 mb-3 border-bottom ${status}`} key={idx}>\r\n                                        <div className='row'>\r\n                                            <div className='col-xl-10 col-md-12'><ElStatus status={status} /> {item.type}: {item.data} | prize: {(info.prizes.\r\n                                            filter((i)=>i._id === item.prizeId))[0].data}</div>\r\n                                            <Button className='col-xl-2 col-md-12' color='secondary'\r\n                                                    onClick={() => delInfo(item._id)}>Удалить</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contest","import './App.css';\nimport Header from \"./components/Header\";\nimport {useRotes} from \"./router\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {ToastContainer, toast, useToast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction App() {\n\n    const router = useRotes()\n\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Header/>\n                {router}\n            </div>\n            <ToastContainer/>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import {Switch, Route, Redirect } from 'react-router-dom'\r\nimport Select from \"./pages/SelectContest\";\r\nimport Create from \"./pages/CreateContest\";\r\nimport Contest from \"./pages/Contest\";\r\nimport Committee from \"./pages/Committee\";\r\n\r\n\r\nexport const useRotes = ()=>{\r\n\r\n    return(\r\n        <Switch>\r\n            <Route path='/' exact>\r\n                <Select/>\r\n            </Route>\r\n            <Route path='/create'>\r\n                <Create/>\r\n            </Route>\r\n            <Route path='/contest/:id'>\r\n                <Contest/>\r\n            </Route>\r\n            <Route path='/committee'>\r\n                <Committee/>\r\n            </Route>\r\n\r\n            <Redirect to='/'/>\r\n        </Switch>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}