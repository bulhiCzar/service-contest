{"version":3,"sources":["components/Header.js","pages/SelectPage.js","pages/CreatePage.js","pages/ContestPage.js","App.js","router.js","index.js"],"names":["Header","className","id","to","exact","activeClassName","SelectPage","useState","contests","setContests","loadContests","a","axios","get","res","status","data","useEffect","length","map","item","idx","_id","name","project","CreatePage","history","useHistory","prize","inputs","setInputs","prizes","setPrizes","handlerInput","e","target","value","submit","preventDefault","post","Error","push","console","log","onSubmit","autoComplete","TextField","label","onChange","placeholder","Button","variant","color","onClick","filter","_","type","ContestPage","useParams","info","setInfo","input","setInput","selectors","setSelectors","number","setNumber","text","btnAdd","setBtnAdd","getData","handleChange","prizeId","temp","infos","unshift","InputLabel","Select","MenuItem","test","parsePhoneNumber","saveBtnAdd","InputProps","startAdornment","code","country","height","fallback","labelId","CircularProgress","App","router","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04a4ca98.chunk.js","sourcesContent":["import {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"container\">\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <NavLink className='nav-link' to='/' exact activeClassName='active'>\r\n                            Главная\r\n                        </NavLink>\r\n                        <NavLink className='nav-link' to='/create' activeClassName='active'>\r\n                            Создать\r\n                        </NavLink>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header","import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst SelectPage = () => {\r\n    const [contests, setContests] = useState([])\r\n\r\n    const loadContests = async () => {\r\n        const res = await axios.get('/api/contest/')\r\n        if (res.status !== 200) return\r\n        setContests(res.data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadContests()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='container-xl'>\r\n            <div className='row'>\r\n                {\r\n                    !contests.length ? 'Еще нет конкурсов' :\r\n                        contests.map((item, idx) => {\r\n                            return (\r\n                                <NavLink to={'/contest/'+item._id} className='col-3 border m-3 p-3 text-decoration-none' key={idx}>\r\n                                    <div className='text-uppercase fs-4 pointer'>{item.name}</div>\r\n                                    <br/>\r\n                                    <div className='fs-6'>{item.project}</div>\r\n                                </NavLink>\r\n                            )\r\n                        })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectPage","import Button from \"@material-ui/core/Button\";\r\nimport React, {useState} from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport axios from \"axios\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\nconst CreatePage = () => {\r\n    const history = useHistory()\r\n    const [inputs, setInputs] = useState({\r\n        name: '', project: '', prize: '',\r\n    })\r\n    const [prizes, setPrizes] = useState([])\r\n\r\n    const handlerInput = (e) => {\r\n        setInputs({...inputs, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const addPrize = ()=>{\r\n        if (!inputs.prize) return\r\n        setPrizes([inputs.prize, ...prizes])\r\n        setInputs({...inputs, prize: ''})\r\n    }\r\n    const delPrize = (id)=>{\r\n        setPrizes(prizes.filter((_, idx)=>idx !== id))\r\n    }\r\n\r\n    const submit = async (e)=>{\r\n        e.preventDefault()\r\n        const {name, project} = inputs\r\n        if(!name || !project || !prizes.length) return\r\n        try {\r\n            const res = await axios.post('/api/contest/',{name, project, prizes})\r\n            if (res.status !== 200) throw new Error()\r\n            history.push('/contest/'+res.data._id)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submit} className='container-xl' autoComplete=\"off\">\r\n            <div className='row mb-2'>\r\n                <TextField label='Название' name='name' value={inputs.name} onChange={handlerInput}/>\r\n                <TextField label=\"Проект\" name='project' value={inputs.project} onChange={handlerInput}/>\r\n                <TextField label=\"Вознаграждение\" name='prize' value={inputs.prize} onChange={handlerInput} placeholder='Например: 1000 долей'/>\r\n                <Button className='mt-3 mb-4' variant=\"contained\" color=\"primary\" onClick={addPrize}>Добавить</Button>\r\n\r\n                {prizes.map((item, idx) => (\r\n                    <div className='row mb-1' key={idx}>\r\n                        <div className='col-10'>{item}</div>\r\n                        <Button className='col-2' variant=\"contained\" color='secondary' onClick={()=>delPrize(idx)}>Удалить</Button>\r\n                    </div>\r\n                ))}\r\n\r\n            </div>\r\n            <div className='row mt-5'>\r\n                <Button variant=\"contained\" color=\"primary\" type='submit'>Создать конкурс</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreatePage","import {useParams} from 'react-router-dom'\r\nimport React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {CircularProgress} from '@material-ui/core';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport parsePhoneNumber from 'libphonenumber-js'\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport Flag from 'react-world-flags'\r\n\r\n\r\nconst ContestPage = () => {\r\n    const {id} = useParams()\r\n    const [info, setInfo] = useState(null)\r\n    const [input, setInput] = useState('')\r\n    const [selectors, setSelectors] = useState({\r\n        prize: '', type: '',\r\n    })\r\n    const [number, setNumber] = useState(null)\r\n    const [btnAdd, setBtnAdd] = useState({\r\n        text: 'Добавить участника', color: \"primary\"\r\n    })\r\n\r\n    const getData = async (id) => {\r\n        const res = await axios.get('/api/contest/' + id)\r\n        if (res.status !== 200) return\r\n        setInfo(res.data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData(id)\r\n    }, [id])\r\n\r\n    const handlerInput = (e) => {\r\n        let {value} = e.target\r\n        if (selectors.type === 'phone') {\r\n            if (!(/^[\\d,+]*$/).test(value)) return\r\n            const number = parsePhoneNumber(value)\r\n            let saveBtnAdd =  {\r\n                text: 'Добавить участника',\r\n                color: 'primary'\r\n            }\r\n            if (!number){\r\n                saveBtnAdd = {\r\n                    text: 'Введите корректный номер',\r\n                    color: 'secondary'\r\n                }\r\n            }\r\n            setBtnAdd(saveBtnAdd)\r\n            setNumber(number)\r\n\r\n        }\r\n        setInput(value)\r\n    }\r\n    const handleChange = e => {\r\n        setSelectors({...selectors, [e.target.name]: e.target.value})\r\n        switch (e.target.name) {\r\n            case 'prize':\r\n                break;\r\n            case 'type':\r\n                let saveBtnAdd =  {\r\n                    text: 'Добавить участника',\r\n                    color: 'primary'\r\n                }\r\n                setBtnAdd(saveBtnAdd)\r\n        }\r\n    }\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault()\r\n        if (!input || !selectors.type || !selectors.prize) return\r\n        const res = await axios.post('/api/contest/' + info._id, {\r\n            data: input,\r\n            type: selectors.type,\r\n            prizeId: selectors.prize\r\n        })\r\n        if (res.status !== 200) return\r\n        const temp = info\r\n        info.infos.unshift(res.data)\r\n        setInfo({...temp})\r\n    }\r\n\r\n    if (!info) return <div className='container text-center'><CircularProgress/></div>\r\n    return (\r\n        <div className='container-xl'>\r\n            <div className='mb-2 text-center bg-primary p-3 text-white'>\r\n                {info.project} | {info.name}\r\n            </div>\r\n            <div>\r\n                <form onSubmit={submit}>\r\n                    <div className='row mb-2 mt-4'>\r\n                        <div className='col-2'>\r\n                            <InputLabel id=\"toPrize\">Тип информации</InputLabel>\r\n                            <Select\r\n                                className='w-100'\r\n                                name='type'\r\n                                value={selectors.type}\r\n                                onChange={handleChange}\r\n                            >\r\n                                <MenuItem value='login'>Логин</MenuItem>\r\n                                <MenuItem value='phone'>Телефона</MenuItem>\r\n                                <MenuItem value='any'>Другое</MenuItem>\r\n                            </Select>\r\n                        </div>\r\n                        <TextField className='col-10' value={input} onChange={handlerInput}\r\n                                   label='Добавить' name='name' placeholder='Добавить участника'\r\n                                   InputProps={{\r\n                                       startAdornment: ((selectors.type === 'phone') && number) &&\r\n                                           <Flag code={number.country} height={20}  fallback={<span>?!</span>}/>,\r\n                                   }}\r\n                        />\r\n                    </div>\r\n                    <Button className='row-12 mb-5 w-100' variant=\"contained\"\r\n                            color={btnAdd.color} type='submit'>\r\n                        {btnAdd.text}\r\n                    </Button>\r\n                </form>\r\n\r\n                <div className='row'>\r\n                    <div className='col-12'>\r\n                        <InputLabel id=\"toPrize\">Приз</InputLabel>\r\n                        <Select\r\n                            labelId='toPrize'\r\n                            className='w-100'\r\n                            name='prize'\r\n                            value={selectors.prize}\r\n                            onChange={handleChange}\r\n                        >\r\n                            {info.prizes.map((item, id) => {\r\n                                return <MenuItem value={item._id}>{item.data}</MenuItem>\r\n                            })}\r\n                        </Select>\r\n                    </div>\r\n                    <div className='col-12 mt-3'>\r\n                        <div className='row'>\r\n                            {info.infos.map((item, idx) => {\r\n                                if (item.prizeId !== selectors.prize) return <></>\r\n                                return (\r\n                                    <div className='col-12 mb-3 border-bottom' key={idx}>\r\n                                        <div className='row'>\r\n                                            <div className='col-10'>{item.type}: {item.data}</div>\r\n                                            {/*<Button className='col-2' color='secondary'>Удалить</Button>*/}\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContestPage","import './App.css';\nimport Header from \"./components/Header\";\nimport {useRotes} from \"./router\";\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nfunction App() {\n\n    const router = useRotes()\n\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Header/>\n                {router}\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import {Switch, Route, Redirect } from 'react-router-dom'\r\nimport SelectPage from \"./pages/SelectPage\";\r\nimport CreatePage from \"./pages/CreatePage\";\r\nimport ContestPage from \"./pages/ContestPage\";\r\n\r\n\r\nexport const useRotes = ()=>{\r\n\r\n    return(\r\n        <Switch>\r\n            <Route path='/' exact>\r\n                <SelectPage/>\r\n            </Route>\r\n            <Route path='/create'>\r\n                <CreatePage/>\r\n            </Route>\r\n            <Route path='/contest/:id'>\r\n                <ContestPage/>\r\n            </Route>\r\n\r\n            <Redirect to='/'/>\r\n        </Switch>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}